name: Scrape Metrocuadrado Bogota

on:
  push:
    branches:
      - main
      - master
  schedule:
    # Run every 8 hours (at 0:00, 8:00, 16:00 UTC)
    - cron: '0 */8 * * *'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Required to push commits

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install --system -e .

      - name: Install Playwright browsers
        run: |
          playwright install chromium
          playwright install-deps chromium

      - name: Create data directory
        run: mkdir -p data

      - name: Run scraper
        run: |
          scrape metrocuadrado-bogota-leasing
        timeout-minutes: 45

      - name: Filter listings and notify
        run: filter_listings
        env:
          FILTER_DATA_DIR: data
          FILTER_OUTPUT_DIR: analysis
          FILTER_OUTPUT_FILENAME: filtered_listings.csv
          FILTER_EMAIL_SENDER: ${{ secrets.FILTER_EMAIL_SENDER }}
          FILTER_EMAIL_PASSWORD: ${{ secrets.FILTER_EMAIL_PASSWORD }}
          FILTER_EMAIL_RECIPIENTS: ${{ secrets.FILTER_EMAIL_RECIPIENTS }}
          FILTER_EMAIL_ENABLED: ${{ secrets.FILTER_EMAIL_ENABLED }}

      - name: Upload scraped data
        uses: actions/upload-artifact@v4
        if: always()  # Upload even if scraper fails
        with:
          name: metrocuadrado-data-${{ github.run_number }}
          path: data/*metrocuadrado*.csv
          retention-days: 30

      - name: Commit and push scraped data
        if: always()  # Always attempt to save results
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull --rebase origin ${{ github.ref_name }} || true
          git add data/*.csv analysis/*.csv || true
          if ! git diff --staged --quiet; then
            git commit -m "ðŸ¤– Auto-scrape: Metrocuadrado data - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push origin ${{ github.ref_name }} || echo "Failed to push, but data is saved in artifacts"
          else
            echo "No new data to commit"
          fi
        continue-on-error: true
